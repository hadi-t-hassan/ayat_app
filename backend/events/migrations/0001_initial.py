# Generated by Django 4.2.7 on 2025-09-29 15:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(help_text='Day of the week (e.g., Friday)', max_length=20)),
                ('date', models.DateField(help_text='Event date')),
                ('time', models.TimeField(help_text='Event start time')),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(480)])),
                ('place', models.CharField(help_text='Event location', max_length=200)),
                ('number_of_participants', models.PositiveIntegerField(default=0, help_text='Expected number of participants')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Event status', max_length=20)),
                ('meeting_time', models.TimeField(blank=True, help_text='Pre-event meeting time', null=True)),
                ('meeting_date', models.DateField(blank=True, help_text='Pre-event meeting date', null=True)),
                ('place_of_meeting', models.CharField(blank=True, help_text='Meeting location', max_length=200, null=True)),
                ('vehicle', models.CharField(blank=True, help_text='Transportation details', max_length=100, null=True)),
                ('camera_man', models.CharField(blank=True, help_text='Camera operator name', max_length=100, null=True)),
                ('dress_details', models.TextField(blank=True, help_text='Dress code and requirements', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='User who created the event', on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_events', models.PositiveIntegerField(default=0)),
                ('pending_events', models.PositiveIntegerField(default=0)),
                ('confirmed_events', models.PositiveIntegerField(default=0)),
                ('completed_events', models.PositiveIntegerField(default=0)),
                ('cancelled_events', models.PositiveIntegerField(default=0)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event Statistics',
                'verbose_name_plural': 'Event Statistics',
                'db_table': 'event_stats',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Song title', max_length=200)),
                ('artist', models.CharField(blank=True, help_text='Song artist', max_length=100, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Song duration in seconds', null=True)),
                ('order', models.PositiveIntegerField(default=1, help_text='Order of song in event')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(help_text='Event this song belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='events.event')),
            ],
            options={
                'verbose_name': 'Song',
                'verbose_name_plural': 'Songs',
                'db_table': 'songs',
                'ordering': ['event', 'order'],
                'unique_together': {('event', 'order')},
            },
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_confirmed', models.BooleanField(default=False, help_text='Participation confirmed')),
                ('event', models.ForeignKey(help_text='Event', on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='events.event')),
                ('user', models.ForeignKey(help_text='Participant user', on_delete=django.db.models.deletion.CASCADE, related_name='event_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Participant',
                'verbose_name_plural': 'Event Participants',
                'db_table': 'event_participants',
                'unique_together': {('event', 'user')},
            },
        ),
    ]
